#!/bin/bash
export TTY

# cterm/pet
# Version 1.0, bash

# Examples:
# ct vim /

sn="$(basename "$0")"

cterm-logo 1>&2

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    -E) {
        DO_EXEC=y
        shift
    }
    ;;

    -nv) {
        export USE_NVC=y
        shift
    }
    ;;

    *) break;
esac; done

if test "$#" -eq 0; then
    set -- sh
fi

if test "$DO_EXEC" = "y"; then
    CMD="$1"
else
    CMD="$(cmd-nice-posix "$@")"
fi

inside-docker-p() {
    test -f /.dockerenv
}

SSH_TO_HOST=y

case "$sn" in
    *cterm|ct*) {
        SSH_TO_HOST=y
    }
    ;;

    # pen eterm
    pet|*eterm|et*) {
        SSH_TO_HOST=n
    }
    ;;

    *)
esac

if inside-docker-p; then
    : ${CWD:="$(pwd)"}
else
    CWD=/
fi

if inside-docker-p; then
    if test -n ~/pen_user.txt; then
        PEN_USER="$(cat ~/pen_user.txt)"
    fi

    : ${PEN_USER:="$(pen-readln "host username")"}
else
    : ${USER:="$(whoami)"}
    PEN_USER=$USER
fi

# These don't get through the interop
export SSH_TO_HOST
export CWD
export CMD
export PEN_USER

# So use cli args instead

# This runs in the docker to the host
# The "$@" are unneccesary because of CMD exported
cterm-docker \
    pen-cterm-ssh \
    -ssh-to-host "$SSH_TO_HOST" \
    -cwd "$CWD" \
    -cmd "$CMD" \
    -user "$PEN_USER" \
    "$@"
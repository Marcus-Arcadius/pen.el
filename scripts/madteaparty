#!/bin/bash
export TTY

# Mad Tea-Party
# Version 1.0, bash

# Mad Tea-Party is a sandbox for language-model-powered chatbots and human interaction.
# AI personalities may be created and join the IRC server, interact inside of channels, etc.
# Human users may take the role of added characters.

inside-docker-p() {
    test -f /.dockerenv
}

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -join) {
        irc_channel_name="$2"
        shift
        shift
    }
    ;;

    *) break;
esac; done

if { ! inside-docker-p; }; then
    pen sh madteaparty "$@"
    exit "$?"
fi

: "${irc_channel_name:="metameetup"}"

username="$1"
shift

username="$(p "$username" | slugify)"

password="$username"

# New user not currently necessary

# pen-x \
#     -sh "adduser pen" \
#     -e "New password" -s pen -c m \
#     -e "Retype" -s pen -c m \
#     -e "Full Name" -s Pen -c m \
#     -c m \
#     -c m \
#     -c m \
#     -c m \
#     -e correct -s Y -c m \
#     -i

# TODO Run inside a named tmux
# The bots ultimately control a tmux

# This is idempotent
# Ensure the mpt-users session exists
pen-tm -d ns -np -n mtp-users

# Then create a nested session for the user
pen-tm -d ns -p mtp-users -n "$username"

session_name="mtp-users_$username"

# Start pen-irssi inside of a tmux inside of the user's session
pen-tm ns -T "MadTeaParty" -s -p "$session_name" -n irssi -a pen-irssi
# Kill the initial tmux window
tmux kill-window -t "$session_name:1"

# Attach the user's session and automate it to log in and switch channel
pen-x \
    -sh "TMUX= tmux attach -t '$session_name'" \
    -e "irssi" \
    -s "/connect irc.localhost 6697 $password $username" -c m \
    -e "Mode change" \
    -s "/join #$irc_channel_name" -c m \
    -i

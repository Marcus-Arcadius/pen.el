#!/bin/bash

yn () {
    y_chars="Yy"
    n_chars="Nn"
    while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
        -N|-carefully) {
            allowed_re="^[YN]$"
            shift
        }
        ;;

        -y|-y-chars) {
            y_chars="$2"
            shift
            shift
        }
        ;;

        -n|-n-chars) {
            n_chars="$2"
            shift
            shift
        }
        ;;

        *) break;
    esac; done

    allowed_re="^[${y_chars}/${n_chars}]$"

    message="$@"

    : ${message:="Are you sure?"}

    exec 1>&2

    echo
    message="$(printf -- "%s" "$message")"
    echo -e " $message"
    echo

    allowed_re="$(printf -- "%s" "$allowed_re")"
    allowed_re_color="$(printf -- "%s" "$allowed_re")"

    if test "$YN_DEFAULT" = "y"; then
        echo y
        exit 0
    fi

    if test "$YN_DEFAULT" = "n"; then
        echo n
        exit 1
    fi

    while :; do
        read -p " $allowed_re_color: " -n 1 -r
        echo
        [[ $REPLY =~ $allowed_re ]] && break
    done
    echo

    [[ $REPLY =~ ^[$y_chars]$ ]]
}

vanilla=
use_pen_config=y

while [ $# -gt 0 ]; do opt="$1"; case "$opt" in
    "") { shift; }; ;;
    -Q) {
        vanilla=y
        use_pen_config=n
        shift
    }
    ;;

    -q) {
        vanilla=y
        use_pen_config=y
        shift
    }
    ;;

    *) break;
esac; done

if ! test "$vanilla" = "y"; then
    test -d "$MYGIT/semiosis/prompts" && : "${PROMPTS_DIR:="$MYGIT/semiosis/prompts"}"
    test -d "prompts" && : "${PROMPTS_DIR:="prompts"}"
    # : "${PROMPTS_DIR:="$(read -ep "PROMPTS_DIR (leave empty to use docker): ")"}"

    test -d "$MYGIT/semiosis/pen.el" && : "${PENEL_DIR:="$MYGIT/semiosis/pen.el"}"
    test -d "pen.el" && : "${PENEL_DIR:="pen.el"}"
    # : "${PENEL_DIR:="$(read -ep "PENEL_DIR (leave empty to use docker): ")"}"

    # yn "Pull docker image?" && docker pull semiosis/pen.el:latest

    set -v
    # docker pull semiosis/pen.el:latest

    if test -d "$PROMPTS_DIR"; then
        yn "Pull prompts repo?" && (
            cd "$PROMPTS_DIR"
            git pull origin master
        )
    else
        yn "Clone prompts repo here?" && (
            git clone "http://github.com/semiosis/prompts"
        )
    fi

    test -d "prompts" && : "${PROMPTS_DIR:="prompts"}"

    test -d "$PENEL_DIR" && yn "Pull pen.el repo?" && (
        cd "$PENEL_DIR"
        git pull origin master
    )

    if test -d "$PROMPTS_DIR"; then
        PROMPTS_DIR="$(realpath "$PROMPTS_DIR")"
    fi

fi

if test "$use_pen_config" = "y"; then
    test -d "$HOME/.pen" && : "${PEN_CONFIG_DIR:="$HOME/.pen"}"
    : "${PEN_CONFIG_DIR:="$(read -ep "PEN_CONFIG_DIR (leave empty to use docker): ")"}"


    if test -d "$PEN_CONFIG_DIR"; then
        PEN_CONFIG_DIR="$(realpath "$PEN_CONFIG_DIR")"
    fi
fi

IFS= read -r -d '' shcode <<HEREDOC
    docker run --user "$(id -u):$(id -g)" \
        $(test -n "$OPENAI_API_KEY" && printf -- "%s " -e "OPENAI_API_KEY:$OPENAI_API_KEY" ) \
        $(test -n "$PEN_CONFIG_DIR" && printf -- "%s " -v "$PEN_CONFIG_DIR:/root/.pen" ) \
        $(test -n "$PROMPTS_DIR" && printf -- "%s " -v "$PROMPTS_DIR:/root/.emacs.d/host/prompts" ) \
        $(test -n "$PENEL_DIR" && printf -- "%s " -v "$PENEL_DIR:/root/.emacs.d/host/pen.el" ) \
        -ti --entrypoint= semiosis/pen.el:latest ./run.sh
HEREDOC

eval "$shcode"
